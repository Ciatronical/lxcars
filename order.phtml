<!DOCTYPE html>
<html>
<head>
<meta charset='utf-8' />

<?php
    require_once( __DIR__."/../inc/stdLib.php" );
    $menu = $_SESSION['menu'];
    echo $menu['stylesheets'];
    echo $menu['javascripts'];
    echo $head['JQUERY'];
    echo $head['JQUERYUI'];
    //echo $head['JQTABLE'];
    echo $head['THEME'];

?>


  <script type="text/javascript" src="../../js/autocomplete_customer.js"></script>
  <script type="text/javascript" src="../../js/autocomplete_part.js"></script>
  <script type="text/javascript" src="../../js/kivi.Order.js"></script>

<script>

$(document).ready(function() {

    $.urlParam = function( name ){
        var results = new RegExp( '[\?&]' + name + '=([^&#]*)' ).exec( window.location.href );
        if( results == null ) alert( 'Parameter: "' + name + '" does not exist in "' + window.location.href + '"!' );
        else return decodeURIComponent( results[1] || 0 );
    }

    var id = $.urlParam( 'id' );
    var timer;
    var articleDescription;
    var grp_name;

    var kivi_global = jQuery.parseJSON( kivi.myconfig.global_conf );
    var baseUrl = kivi_global.baseurl;

    //console.log( baseUrl )
    //console.log(kivi_global)
    //console.log(kivi_global.erp_all_groups)

    //Einfügen beim Laden
    $('<div class="ui-widget-content">' +
        '<div id="tmp"></div>' +
        '<div>' +
            '<p class="tools ui-state-highlight ui-corner-all lang " style="margin-top: 20px; padding: 0.6em;" data-lang="HEADLINE">' +
                '<label id="head01">Auftragsnummer:</label>' +
                '<label id="head02">0000</label>' +
                '<label id="head03">Auftraggeber:</label>' +
                '<label id="head04"></label></br>' +
                '<label id="head05">Fertigstellung:</label>' +
                '<input id="head06" type="text">' +
                '<label id="head07">KM-Stand:</label>' +
                '<input id="head08" type="text"></br>' +
                '<label id="head09">bearbeitet von:</label>' +
                '<label id="head19">Amtl.-Kennz.:</label>' +
                '<label id="head20"></label>' +
                '<label id="head10"></label>' +
                '<label id="head11">bearbeitet am:</label>' +
                '<label id="head12"></label></br>' +
                '<label id="head13">KfZ:</label>' +
                '<select id="head14" type="text">' +
                    '<option>Auto nicht hier</option>' +
                    '<option selected="selected">Auto hier</option>' +
                    '<option>Sonstiges zur Reparatur gebracht</option>' +
                    '<option>Bestellung</option>' +
                '</select></br>' +
                '<label id="head15">erstellt am:</label>' +
                '<label id="head16"></label>' +
                '<label id="head17">Status:</label>' +
                '<select id="head18" type="text">' +
                    '<option>angenommen</option>' +
                    '<option>bearbeitet</option>' +
                    '<option selected="selected">abgerechnet</option>' +
                '</select>' +
            '</p>' +
        '</div>' +
        '<div>' +
            '<img src="' + baseUrl + '/image/updown.png" class="lblPositioning lblPos1">' +
            '<img src="' + baseUrl + '/image/close.png" class="lblPositioning lblPos2">' +
            '<label name="position" class="lblPositioning lblPos3">Position</label>' +
            '<label name="art_nr" class="lblPositioning lblPos4">Artikel-Nr.</label>' +
            '<label name="bezeichnung" class="lblPositioning lblPos5">Beschreibung</label>' +
            '<label name="einheit" class="lblPositioning lblPos6">Einheit</label>' +
            '<label name="preis" class="lblPositioning lblPos7">Preis</label>' +
            '<label name="rabatt" class="lblPositioning lblPos8">Rabatt</label>' +
            '<label name="gesamt" class="lblPositioning lblPos9">Gesamt</label>' +
            '<label name="mechaniker" class="lblPositioning lblPos10">Mechaniker</label>' +
            '<label name="status" class="lblPositioning lblPos11">Status</label>' +
        '</div>' +
        '<form id="myform">' +
            '<ul id="sortable">' +
            '</ul>' +
        '</form>' +
    '</div>').appendTo('body');

    newPositionContainer();

    $('#sortable').sortable({
        update: function() {
            zaehler();
            updateDatabase();
        }
    });

    function newPositionContainer() {
        //$("#pos__" + mycnt ).off( 'change' ); //detaching changehandler
        //Container for inputs
        $('<li  class="ui-state-default position new">' +
            '<img src="' + baseUrl + '/image/updown.png" class="mv">' +
            '<img src="' + baseUrl + '/image/close.png" class="rmv">' +
            '<input name="order_nr" type="text" class="ui-widget-content ui-corner-all pos elem" autocomplete="off">' +
            '<input name="item_nr" type="text" class="ui-widget-content ui-corner-all itemNr elem" autocomplete="off">' +
            '<input name="pos_description" type="text" class="add_item_input part_autocomplete partpicker_fat_set_item ui-widget-content ui-corner-all description elem" autocomplete="on">' +
            '<select name="pos_unit" type="text" class="ui-widget-content ui-corner-all unity elem" autocomplete="off">' +
                '<option selected="selected"></option>' + //!get via AJAX
                '<option>Stck</option>' +
                '<option>kg</option>' +
                '<option>Std</option>' +
            '</select>' +
            '<input name="pos_price" value="0" type="text" class="ui-widget-content ui-corner-all price elem" autocomplete="off">' +
            '<input name="pos_discount" value="0" type="text" class="ui-widget-content ui-corner-all discount elem" autocomplete="off">' +
            '<input name="pos_total" value="0" type="text" class="ui-widget-content ui-corner-all total elem" autocomplete="off">' +
            '<select name="pos_emp" type="text" class="ui-widget-content ui-corner-all mechanics elem" autocomplete="off">' +
                '<option value="0" selected="selected"></option>' +
                '<option value="1">Mechaniker</option>' +
                '<option value="2">Monteur</option>' +
            '</select>' +
            '<select name="pos_status" type="text" class="ui-widget-content ui-corner-all status elem" autocomplete="off">' +
                '<option value="0" selected="true"></option>' +
                '<option value="1">gelesen</option>' +
                '<option value="2">Bearbeitung</option>' +
                '<option value="3">erledigt</option>' +
            '</select>' +
            '<label name="pos_id" class="posID elem"></label>' +
          '</li>').appendTo('#sortable');//.attr('id','NewId_' + cnt);

        zaehler();

        $( '.posID' ).val( '0' );
        $( '.pos' ).attr( 'readonly', true );
        //$( '.posID' ).hide();

        $( 'select' ).change( function (){
            var y = $(this).val()
            $(this).attr('value', y)
        })

        $( '.rmv' ).click( function (){
            var posToDel = $(this).parent().children('.posID').text();
            //alert(posToDel);
                $.ajax({
                    url: 'ajax/order.php',
                    data: { action: "delPosition", data: posToDel },
                    type: "POST",
                    success: function(){
                        //alert('Gesendet');
                    },
                    error:   function(){
                        alert('Senden der Daten fehlgeschlagen!');
                    }
                });
            $( this ).parent().remove();
            zaehler();
            updateDatabase();
        });

        //bei Änderung des Textes in ".elem"
        $( '.elem' ).on( 'keyup', function(){
            //Wird benötigt um der ".elem" für das INSERT das Value zu zuweisen
            var y = $(this).val();
            $(this).attr('value', y);

            if( $( this ).parent().hasClass( 'new' ) ){                                //INSERT wenn der Container die Klasse "new" aufweist
                insertIntoDatabase();
                $( this ).parent().removeClass( 'new' )                            //Entfernen der Klasse "new" bei dem aktuellen Container

            } else {
                    updateDatabase();
            }
        });

        $(function () {
            grp_name = 'Werkstatt';
            $.ajax({
                url: 'ajax/order.php?action=getUsersFromGroup&data=' + grp_name,
                type: 'GET',
                success: function (data) {
                    //console.log(JSON.stringify(data));
                    //console.log(data);
                    //console.log('jens');
                },
                error:  function(){ alert("holen der Gruppenzugehörigkeit fehlgeschlagen!"); }
            })
        });



/*
        //Holen der Artikelbezeichnung für Autocomplete der neuen Positionen
        $(function () {
            $.ajax({
                url: 'ajax/order.php?action=getArticleDescription',
                type: 'GET',
                success: function (data) {
                    //console.log(JSON.stringify(data));
                    console.log(data);

                    var availablePosition = 0;
                    var available = [];
                    $.each(data, function (index, item) {
                        //console.log(item);
                        available[availablePosition++] = item.description;
                    })
                        //console.log(available);

                    $('.description').autocomplete({
                        source:available,
                        minLength:2,
                        delay: 500,
                        minLength: 1,
                        select: function (event, ui) {
                            //articleDescription = ui.item.value;
                            //console.log(articleDescription);


                            $.ajax({
                                url: 'ajax/order.php?action=getArticle&data=' + articleDescription,
                                type: 'GET',
                                success: function (data) {
                                    //alert(JSON.stringify(data));
                                    //console.log(JSON.stringify(data));
                                    console.log(data);
                                    //alert(data[0].id);
                                },
                                error:  function(){ alert("holen der Datensaetze fehlgeschlagen!"); }
                            })


                        }
                    });

                },
                error:  function(){ alert("Holen der Artikelbezeichnung fehlgeschlagen!"); }
            })
        });
*/

    };

    function insertIntoDatabase() {
                var posObject = {};
                var posArray = $( '.new' ).children( '.elem' );
                //console.log( posArray );
                $.each( posArray, function( index, item ){
                    posObject[item.name] = item.value;
                });
                posObject['order_id'] = orderID;
                //console.log( posObject );

                // Insert
                $.ajax({
                    url: 'ajax/order.php',
                    //data: { action: "newEntry", data: JSON.stringify(sendData) },
                    data: { action: "newEntry", data: posObject },
                    type: "POST",
                    success: function(result){
                        //alert(result);
                            $('#pos__' + ( i +  1 ) + '__elem__10').text(result);
                    },
                    error:   function(){
                        alert('Insert der Daten fehlgeschlagen!');
                    }
                });


                newPositionContainer();


    }

/*
    function updateDatabase() {
                clearTimeout( timer );
                timer = setTimeout( function(){   //calls click event after a certain time
                    var updateDataJSON = new Array;
                    $( 'ul#sortable > li' ).each( function(){
                        updateDataJSON.push({
                            //"Bezeichnung des Arrays": Inhalt der zu Speichern ist
                            "order_nr": $( this ).children( '.pos' ).val(),
                            "item_nr": $( this ).children( '.itemNr' ).val(),
                            "pos_description": $( this ).children( '.description' ).val(),
                            "pos_unit": $( this ).children( '.unity' ).val(),
                            "pos_price": $( this ).children( '.price' ).val(),
                            "pos_discount": $( this ).children( '.discount' ).val(),
                            "pos_total": $( this ).children( '.total' ).val(),
                            "pos_emp": $( this ).children( '.mechanics' ).val(),
                            "pos_status": $( this ).children( '.status' ).val(),
                            "pos_id": $( this ).children( '.posID' ).text()
                        });
                    })

                    updateDataJSON.pop()

                    $.ajax({
                        url: 'ajax/order.php',
                        //data: { action: "updatePositions", data: JSON.stringify(updateDataJSON)},
                        data: { action: "updatePositions", data: updateDataJSON },
                        type: "POST",
                            success: function(){
                                //alert( 'send all posdata' );
                            },
                            error:  function(){
                                alert( 'error sending posdata' );
                            }
                    });

                }, 800 );
    }
*/
    function zaehler() {
        $( '.position' ).each( function( cnt, list ){
            $( list ).attr( 'id', 'pos__' + ( cnt + 1 ) ).children( '.pos' ).val( ( cnt + 1 ) ).attr('value', (cnt + 1));
            //For-Schleife um in den einzelnen ListenElementen die Felder
            //durch zu zählen und zu nummerieren
            var elements = $( this ).children( '.elem' );
            for( var i = 0; i < elements.length; i++ ){
                elements[i].id = $( list ).attr( 'id' ) + '__elem__' + ( i + 1 );
            }
        })
    }

    var orderID;
    if( id > '0' ){
        //Head-Area
        $.ajax({
            url: 'ajax/order.php?action=getOrder&data=' + id,
            type: 'GET',
            success: function (data) {
                //console.log(JSON.stringify(data));
                //console.log(data);
                $('#head02').text(data[0].order_id);
                $('#head04').text(data[0].customer_name);
                $('#head10').text(kivi.myconfig.name);
                /*
                $('#head06').val(data[0].lxc_a_finish_time)
                $('#head08').val(data[0].lxc_a_km);
                $('#head12').text(data[0].lxc_a_modified_on);
                $('#head16').text(data[0].lxc_a_init_time);
                $('#head20').text(data[0].c_ln);
                */
                orderID = data[0].oe_id;
                //alert(orderID);
            },
            error:  function(){ alert("Holen des Auftrages fehlgeschlagen!"); }
        })

        clearTimeout( timer );
        timer = setTimeout( function(){
            //Data-Area
            $.ajax({
                url: 'ajax/order.php?action=getPosition&data=' + orderID,
                type: 'GET',
                success: function (data) {
                    //alert(JSON.stringify(data));
                    //console.log(JSON.stringify(data));
                    //console.log(data);

                    for (i = 0; i < data.length; i++) {
                        $('#pos__' + ( i +  1 ) + '__elem__2').val(data[i].parts_id);
                        $('#pos__' + ( i +  1 ) + '__elem__3').val(data[i].description);
                        $('#pos__' + ( i +  1 ) + '__elem__4').val(data[i].unit);
                        $('#pos__' + ( i +  1 ) + '__elem__5').val(data[i].sellprice);
                        $('#pos__' + ( i +  1 ) + '__elem__6').val(data[i].discount);
                        $('#pos__' + ( i +  1 ) + '__elem__7').val(data[i].marge_total);
                        /*
                        if ($(".mechanics option[value='" + data[i].pos_emp + "']").val() == data[i].pos_emp) {
                            $('#pos__' + (i+1) + '__elem__8').val(data[i].pos_emp)
                        } else {
                            $('#pos__' + (i+1) + '__elem__8').append('<option selected="selected">' + data[i].pos_emp + '</option>')
                        }

                        if ($(".status option[value='" + data[i].pos_status + "']").val() == data[i].pos_status) {
                            $('#pos__' + (i+1) + '__elem__9').val(data[i].pos_status)
                        } else {
                            $('#pos__' + (i+1) + '__elem__9').append('<option selected="selected">' + data[i].pos_status + '</option>')
                        }
                        */

                        $('#pos__' + ( i +  1 ) + '__elem__10').text(data[i].position_id).attr('value', data[i].position_id)

                        $('.position').removeClass('new');

                        newPositionContainer();
                    }

                },
                error:  function(){ alert("Holen der zugehörigen Artikel fehlgeschlagen!"); }
            })
        }, 200 );
    }

}); //Ende $(document).ready()

</script>
<style>

table.tablesorter { width:auto; cursor:pointer; }

    #head01 {position: absolute; top: 135px; left: 5px; font-size: 12px;}
    #head02 {position: absolute; top: 135px; left: 125px; font-size: 12px;}
    #head03 {position: absolute; top: 135px; left: 500px; font-size: 12px;}
    #head04 {position: absolute; top: 135px; left: 650px; font-size: 12px;}
    #head05 {position: absolute; top: 150px; left: 5px; font-size: 12px;}
    #head06 {position: absolute; top: 150px; left: 125px; font-size: 12px;}
    #head07 {position: absolute; top: 150px; left: 500px; font-size: 12px;}
    #head08 {position: absolute; top: 150px; left: 650px; font-size: 12px; width: 100px}
    #head09 {position: absolute; top: 165px; left: 5px; font-size: 12px;}
    #head10 {position: absolute; top: 165px; left: 125px; font-size: 12px;}
    #head11 {position: absolute; top: 165px; left: 500px; font-size: 12px;}
    #head12 {position: absolute; top: 165px; left: 650px; font-size: 12px;}
    #head13 {position: absolute; top: 180px; left: 500px; font-size: 12px;}
    #head14 {position: absolute; top: 180px; left: 650px; font-size: 12px;}
    #head15 {position: absolute; top: 200px; left: 5px; font-size: 12px;}
    #head16 {position: absolute; top: 200px; left: 125px; font-size: 12px;}
    #head17 {position: absolute; top: 200px; left: 500px; font-size: 12px;}
    #head18 {position: absolute; top: 200px; left: 650px; font-size: 12px;}
    #head19 {position: absolute; top: 150px; left: 770px; font-size: 12px;}
    #head20 {position: absolute; top: 150px; left: 870px; font-size: 12px;}

    #sortable, #head { list-style-type: none; margin: 0; padding: 0;padding-left: 2.5em; width: 1550px; }
    #sortable li, #head li { margin: 0 3px 3px 3px; font-size: 1.4em; height: 30px; }
    #sortable li span { position: absolute; margin-left: -1.3em; }
    #buttons { padding-left: 2.5em; padding-top: 1em;    }
    .btn { position: relative; left: 15px; }
    .lblPos1 {  position:relative; left: 43px;}
    .lblPos2 {  position:relative; left: 48px;}
    .lblPos3 {  position:relative; left: 53px;}
    .lblPos4 {  position:relative; left: 60px;}
    .lblPos5 {  position:relative; left: 65px;}
    .lblPos6 {  position:relative; left: 555px;}
    .lblPos7 {  position:relative; left: 570px;}
    .lblPos8 {  position:relative; left: 645px;}
    .lblPos9 {  position:relative; left: 710px;}
    .lblPos10 {  position:relative; left: 765px;}
    .lblPos11 { position: relative; left: 835px;}
    .mv {  position:relative; left: 5px; top: 3px;}
    .rmv {  position:relative; left: 10px; top: 3px;}
    .pos {  position:relative; left: 20px; width: 50px; text-align: right; background: none; border-style: none; pointer-events: none;}
    .itemNr {  position:relative; left: 23px; width: 65px;}
    .description {  position:relative; left: 28px; width: 570px;}
    .unity {  position:relative; left: 33px; width: 50px}
    .price {  position:relative; left: 40px; width: 100px; text-align: right;}
    .discount {  position:relative; left: 45px; width: 100px;text-align: right;}
    .total {  position:relative; left: 50px; width: 100px;text-align: right;}
    .mechanics {  position:relative; left: 55px; width: 140px;}
    .status { position: relative; left: 60px; width: 140px;}
    .posID { position: relative; left: 65px; font-size: 12px; }

</style>
</head>

<body>
<?php
    echo $menu['pre_content'];
    echo $menu['start_content'];
?>

<?php echo $menu['end_content']; ?>

<p class="ui-state-highlight ui-corner-all tools" style="margin-top: 20px; padding: 0.6em;">Testfile</p>




</body>
</html>
